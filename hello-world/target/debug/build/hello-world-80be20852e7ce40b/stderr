[0m[0m[1m[32m   Compiling[0m syn v1.0.104
[0m[0m[1m[32m   Compiling[0m pwasm-utils v0.19.0
[0m[0m[1m[32m   Compiling[0m futures-util v0.3.25
[0m[0m[1m[32m   Compiling[0m galloc v0.1.0 (https://github.com/gear-tech/gear.git#f6da9673)
[0m[0m[1m[32m   Compiling[0m bs58 v0.4.0
[0m[0m[1m[32m   Compiling[0m futures v0.3.25
[0m[0m[1m[32m   Compiling[0m serde_derive v1.0.148
[0m[0m[1m[32m   Compiling[0m thiserror-impl v1.0.37
[0m[0m[1m[32m   Compiling[0m impl-trait-for-tuples v0.2.2
[0m[0m[1m[32m   Compiling[0m derive_more v0.99.17
[0m[0m[1m[32m   Compiling[0m thiserror v1.0.37
[0m[0m[1m[32m   Compiling[0m gstd-codegen v0.1.0 (https://github.com/gear-tech/gear.git#f6da9673)
[0m[0m[1m[32m   Compiling[0m serde v1.0.148
[0m[0m[1m[32m   Compiling[0m toml v0.5.9
[0m[0m[1m[32m   Compiling[0m cargo-platform v0.1.2
[0m[0m[1m[32m   Compiling[0m serde_json v1.0.89
[0m[0m[1m[32m   Compiling[0m semver v1.0.14
[0m[0m[1m[32m   Compiling[0m camino v1.1.1
[0m[0m[1m[32m   Compiling[0m cargo_metadata v0.15.2
[0m[0m[1m[32m   Compiling[0m proc-macro-crate v1.2.1
[0m[0m[1m[32m   Compiling[0m parity-scale-codec-derive v3.1.3
[0m[0m[1m[32m   Compiling[0m scale-info-derive v2.3.0
[0m[0m[1m[32m   Compiling[0m gear-wasm-builder v0.1.2 (https://github.com/gear-tech/gear.git#f6da9673)
[0m[0m[1m[32m   Compiling[0m hello-world v1.0.0 (/Volumes/KINGSTON 1/ProgramacioÃÅn en Rust/hello-world)
[0m[0m[1m[32m   Compiling[0m parity-scale-codec v3.2.1
[0m[0m[1m[32m   Compiling[0m scale-info v2.3.0
[0m[0m[1m[32m   Compiling[0m impl-codec v0.6.0
[0m[0m[1m[32m   Compiling[0m gear-core-errors v0.1.0 (https://github.com/gear-tech/gear.git#f6da9673)
[0m[0m[1m[32m   Compiling[0m primitive-types v0.12.1
[0m[0m[1m[32m   Compiling[0m gcore v0.1.0 (https://github.com/gear-tech/gear.git#f6da9673)
[0m[0m[1m[32m   Compiling[0m gstd v0.1.0 (https://github.com/gear-tech/gear.git#f6da9673)
[0m[1m[33mwarning[0m[0m[1m: unused imports: `msg`, `prelude::*`[0m
[0m [0m[0m[1m[38;5;12m--> [0m[0m/Volumes/KINGSTON 1/ProgramacioÃÅn en Rust/hello-world/src/lib.rs:2:12[0m
[0m  [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m2[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse gstd::{msg, prelude::*};[0m
[0m  [0m[0m[1m[38;5;12m| [0m[0m           [0m[0m[1m[33m^^^[0m[0m  [0m[0m[1m[33m^^^^^^^^^^[0m
[0m  [0m[0m[1m[38;5;12m|[0m
[0m  [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[0m[0m[1m[33mwarning[0m[1m:[0m `hello-world` (lib) generated 1 warning (run `cargo fix --lib -p hello-world` to apply 1 suggestion)
[0m[0m[1m[32m   Compiling[0m hello-world-wasm v1.0.0 (/Volumes/KINGSTON 1/ProgramacioÃÅn en Rust/hello-world/target/debug/build/hello-world-80be20852e7ce40b/out)
[0m[0m[1m[32m    Finished[0m dev [optimized + debuginfo] target(s) in 1m 38s
